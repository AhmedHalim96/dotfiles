#compdef prettier

# zsh completions for 'prettier'
# automatically generated with http://github.com/RobSis/zsh-completion-generator
local arguments

arguments=(
  {-c,--check}'[check if the given files are formatted, print a human-friendly summary]'
  {-l,--list-different}'[print the names of files that are different from Prettiers formatting (see also --check).]'
  {-w,--write}'[edit files in-place. (Beware!)]'
  '--arrow-parens[include parentheses around a sole arrow function parameter.]'
  '--no-bracket-spacing[do not print spaces between brackets.]'
  '--embedded-language-formatting[control how Prettier formats quoted code embedded in the file.]'
  '--end-of-line[which end of line characters to apply.]'
  '--html-whitespace-sensitivity[how to handle whitespaces in HTML.]'
  '--jsx-bracket-same-line[put > on the last line instead of at a new line.]'
  '--jsx-single-quote[use single quotes in JSX.]'
  '--parser[5|json-stringify|graphql|markdown|mdx|vue|yaml|html|angular|lwc|lua>]'
  '--print-width[the line length where Prettier will try wrap.]'
  '--prose-wrap[how to wrap prose.]'
  '--quote-props[change when properties in objects are quoted.]'
  '--no-semi[do not print semicolons, except at the beginning of lines which may need them.]'
  '--single-quote[use single quotes instead of double quotes.]'
  '--tab-width[number of spaces per indentation level.]'
  '--trailing-comma[5|none|all>]'
  '--use-tabs[indent with tabs instead of spaces.]'
  '--vue-indent-script-and-style[indent script and style tags in Vue files.]'
  '--config[path to a Prettier configuration file (.prettierrc, package.json, prettier.config.js).]'
  '--no-config[do not look for a configuration file.]'
  '--config-precedence[define in which order config files and CLI options should be evaluated.]'
  '--no-editorconfig[dont take .editorconfig into account when parsing configuration.]'
  '--find-config-path[find and print the path to a configuration file for the given input file.]'
  '--ignore-path[path to a file with patterns describing files to ignore.]'
  '--plugin[add a plugin. Multiple plugins can be passed as separate `--plugin`s.]'
  '--plugin-search-dir[custom directory that contains prettier plugins in node_modules subdirectory.]'
  '--with-node-modules[process files inside node_modules directory.]'
  '--cursor-offset[print (to stderr) where a cursor at the given position would move to after formatting.]'
  '--range-end[format code ending at a given character offset (exclusive).]'
  '--range-start[format code starting at a given character offset.]'
  '--no-color[do not colorize error messages.]'
  '--file-info[extract the following info (as JSON) for a given file path. Reported fields:]'
  {-h,--help}'[show CLI usage, or details about the given flag.]'
  {-u,--ignore-unknown}'[ignore unknown files.]'
  '--insert-pragma[insert @format pragma into files first docblock comment.]'
  '--loglevel[what level of logs to report.]'
  '--require-pragma[require either @prettier or @format to be present in the files first docblock comment]'
  '--stdin-filepath[path to the file to pretend that stdin comes from.]'
  '--support-info[print support information as JSON.]'
  {-v,--version}'[print Prettier version.]'
  '*:filename:_files'
)

_arguments -s $arguments
